{"version":3,"sources":["serviceWorker.js","Components/NavBar/NavBar.js","Components/AppCards/SingleAppCard.js","Components/AppCards/AppCards.js","assets/asset1.svg","assets/icon1.svg","assets/icon2.svg","assets/icon3.svg","assets/icon4.svg","Pages/AppsDisplay/AppsDisplay.js","Pages/AppStatsDisplay/AppStatsDisplay.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","NavBar","className","IconVal","props","name","val","SingleAppCard","useState","app","data","color","stats","console","log","history","useHistory","appName","publisherName","onClick","push","pathname","id","AppCards","Apps","setApps","setStats","colors","useEffect","fetchApps","a","axios","get","fectchAllStats","map","App","idx","AppsDisplay","src","asset1","alt","icon1","icon2","icon3","icon4","AppStatsDisplay","months","useParams","setData","useLocation","setColor","commafy","num","str","toString","split","length","replace","join","row","date","revenue","adRequest","adResponse","impressions","clicks","toFixed","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2PAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kCCNSC,EARA,WACX,OACI,qBAAKC,UAAU,SAAf,qB,0ECDFC,EAAU,SAACC,GACb,OACI,sBAAKF,UAAU,OAAf,UACI,8BAAK,6BAAKE,EAAMC,SAChB,8BAAK,4BAAID,EAAME,YA2DZC,EArDO,SAACH,GAEnB,MAAeI,mBAASJ,EAAMK,KAAvBC,EAAP,oBACA,EAAgBF,mBAASJ,EAAMO,OAAxBA,EAAP,oBACA,EAAgBH,mBAASJ,EAAMQ,OAAxBA,EAAP,oBACAC,QAAQC,IAAIF,GACZ,IAAMG,EAAUC,cAmBhB,OACI,sBAAKd,UAAU,WAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAWS,IAChB,sBAAKT,UAAU,WAAf,UACI,8BAAK,6BAAKQ,EAAKO,YACf,8BAAK,4BAAIP,EAAKQ,wBAGtB,8BAAK,cAAC,IAAD,CAAkBC,QA5Bf,WAChBJ,EAAQK,KAAK,CACTC,SAAS,QAAD,OAAUX,EAAKY,IACvBb,IAAK,CAAEJ,KAAMK,EAAKO,QAASC,cAAeR,EAAKQ,eAC/CP,MAAOA,KAwB0CT,UAAU,gBAE3D,sBAAKA,UAAU,YAAf,UAKI,cAAC,EAAD,CAASG,KAAK,UAAUC,IAAI,SAC5B,cAAC,EAAD,CAASD,KAAK,cAAcC,IAAI,QAChC,cAAC,EAAD,CAASD,KAAK,cAAcC,IAAI,QAChC,cAAC,EAAD,CAASD,KAAK,cAAcC,IAAI,e,iBCLjCiB,EA/CE,WACb,MAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KACA,EAA0BjB,qBAA1B,mBAAOI,EAAP,KAAcc,EAAd,KACMC,EAAS,CAAC,SAAU,QAAS,UAkBnC,OAhBAC,qBAAU,WAER,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEACKC,IAAMC,IAAI,8CADf,gBACTtB,EADS,EACTA,KACPe,EAAQf,GAFQ,2CAAH,qDAKTuB,EAAc,uCAAG,8BAAAH,EAAA,sEACAC,IAAMC,IAAI,8CADV,gBACdtB,EADc,EACdA,KACPgB,EAAShB,GAFY,2CAAH,qDAIpBmB,IACAI,MAEC,IAGC,mCAEI,sBAAK/B,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sCACA,6BAAI,cAAC,IAAD,SAER,qBAAKA,UAAU,aAAf,gBAEQsB,QAFR,IAEQA,OAFR,EAEQA,EAAMU,KAAI,SAACC,EAAKC,GAAN,OACN,cAAC,EAAD,CAA4B3B,IAAK0B,EAAKvB,MAAQA,GAASA,EAAMuB,EAAIb,IAAKX,MAAOgB,EAAOS,EAAI,IAApED,EAAIb,eCxCrC,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCgD1Be,G,MAtCK,WAChB,OACQ,sBAAKnC,UAAU,YAAf,UACI,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,QAAf,SACI,qBAAKoC,IAAKC,EAAQC,IAAI,SAE1B,sBAAKtC,UAAU,eAAf,UACI,sDACA,sBAAKA,UAAU,oBAAf,UACI,gCACI,qBAAKoC,IAAKG,EAAOD,IAAI,OACrB,8CAEJ,gCACI,qBAAKF,IAAKI,EAAOF,IAAI,OACrB,gDAEJ,gCACI,qBAAKF,IAAKK,EAAOH,IAAI,OACrB,iDAEJ,gCACI,qBAAKF,IAAKM,EAAOJ,IAAI,OACrB,+DAKhB,cAAC,EAAD,S,yBCwEDK,EAzGS,SAACzC,GAErB,IAAM0C,EAAS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGIxB,EAAOyB,cAAPzB,GACR,EAAwBd,mBAASJ,EAAMK,KAAvC,mBAAOC,EAAP,KAAasC,EAAb,KACA,EAA0BxC,mBAAS,IAAnC,mBAAOI,EAAP,KAAcc,EAAd,KACM5B,EAAWmD,cACXlC,EAAUC,cAChB,EAA0BR,qBAA1B,mBAAOG,EAAP,KAAcuC,EAAd,KAEAtB,qBAAU,WASN,OAPe,uCAAG,8BAAAE,EAAA,sEACKC,IAAMC,IAAN,qDAAwDV,IAD7D,gBACTZ,EADS,EACTA,KACPgB,EAAShB,GAFO,2CAAH,oDAIfmB,GACAmB,EAAQlD,EAASW,KACjByC,EAASpD,EAASa,OACX,kBAAgB,KACxB,CAACW,EAAIxB,EAASW,IAAKX,EAASa,QAE/B,IAAMwC,EAAU,SAAEC,GACd,IAAIC,EAAMD,EAAIE,WAAWC,MAAM,KAO/B,OANIF,EAAI,GAAGG,QAAU,IACjBH,EAAI,GAAKA,EAAI,GAAGI,QAAQ,qBAAsB,QAE9CJ,EAAI,IAAMA,EAAI,GAAGG,QAAU,IAC3BH,EAAI,GAAKA,EAAI,GAAGI,QAAQ,WAAY,QAEjCJ,EAAIK,KAAK,MAMpB,OACI,gCACI,cAAC,EAAD,IACA,sBAAKxD,UAAU,kBAAf,UACI,cAAC,IAAD,CAAeiB,QARP,WAChBJ,EAAQK,KAAK,MAOgClB,UAAU,eAE/C,qBAAKA,UAAWS,IAChB,sBAAKT,UAAU,WAAf,UACI,8BAAK,oCAAKQ,QAAL,IAAKA,OAAL,EAAKA,EAAML,SAChB,8BAAK,mCAAIK,QAAJ,IAAIA,OAAJ,EAAIA,EAAMQ,wBAGvB,qBAAKhB,UAAU,QAAf,SACA,kCACI,gCACI,+BACI,sCACA,yCACA,6CACA,8CACA,6CACA,wCACA,kDAGR,uCAEIU,QAFJ,IAEIA,OAFJ,EAEIA,EAAOsB,KAAI,SAACyB,EAAKvB,GAAN,OACP,+BACI,+BACCuB,EAAIC,KAAKL,MAAM,KAAK,GAAI,MACxBI,EAAIC,KAAKL,MAAM,KAAK,GAAK,GACpBT,EAAOa,EAAIC,KAAKL,MAAM,KAAK,GAAGA,MAAM,IAAI,GAAK,GAC7CT,EAAOa,EAAIC,KAAKL,MAAM,KAAK,GAAK,GAAI,KACzCI,EAAIC,KAAKL,MAAM,KAAK,MAGrB,mCAAMJ,EAAQQ,EAAIE,YAClB,6BAAKV,EAAQQ,EAAIG,aACjB,6BAAKX,EAAQQ,EAAII,cACjB,6BAAKZ,EAAQQ,EAAIK,eACjB,6BAAKb,EAAQQ,EAAIM,UACjB,gCAAON,EAAIK,YAAYL,EAAII,WAAa,KAAKG,QAAQ,GAArD,SAdK9B,iBC1DlBD,EAlBL,WAER,OACE,cAAC,IAAD,UACE,qBAAKjC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,cCbZC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SZ2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6c97f1f1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport './NavBar.css'\n\n\nconst NavBar = () =>{\n    return(\n        <div className=\"navbar\">\n            ADSOUL\n        </div>\n    )\n}\n\nexport default NavBar","import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport './AppCards.css'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst IconVal = (props) =>{\n    return(\n        <div className=\"name\">\n            <div><h3>{props.name}</h3></div>\n            <div><p>{props.val}</p></div>\n        </div>\n    )\n}\n\n\nconst SingleAppCard = (props) =>{\n\n    const [data] = useState(props.app);\n    const [color] = useState(props.color);\n    const [stats] = useState(props.stats);\n    console.log(stats)\n    const history = useHistory();\n    const handleClick = () =>{\n        history.push({\n            pathname: `/app/${data.id}`,\n            app: { name: data.appName, publisherName: data.publisherName }, \n            color: color\n        });\n    }\n    const commafy = ( num ) => {\n        var str = num.toString().split('.');\n        if (str[0].length >= 3) {\n            str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\n        }\n        if (str[1] && str[1].length >= 3) {\n            str[1] = str[1].replace(/(\\d{3})/g, '$1 ');\n        }\n        return str.join('.');\n    }\n\n    return(\n        <div className=\"app-card\">\n            <div className=\"clickable\">\n                <div className=\"app-title\">\n                    <div className={color}></div>\n                    <div className=\"app-name\">\n                        <div><h2>{data.appName}</h2></div>\n                        <div><p>{data.publisherName}</p></div>\n                    </div>\n                </div>\n                <div><ArrowForwardIcon onClick={handleClick} className=\"button\"/></div>\n            </div>\n            <div className=\"app-stats\">\n                {/* <IconVal name=\"Revenue\" val={stats?.reduce((a, b)=> a+b.revenue, 0)}/>\n                <IconVal name=\"Ad Requests\" val={stats?.reduce((a, b)=> a+b.adRequest, 0)}/>\n                <IconVal name=\"Ad Response\" val={stats?.reduce((a, b)=> a+b.adResponse, 0)}/>\n                <IconVal name=\"Impressions\" val={stats?.reduce((a, b)=> a+b.impressions, 0)}/> */}\n                <IconVal name=\"Revenue\" val=\"$325\"/>\n                <IconVal name=\"Ad Requests\" val=\"10M\"/>\n                <IconVal name=\"Ad Response\" val=\"10M\"/>\n                <IconVal name=\"Impressions\" val=\"10M\"/>\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default SingleAppCard\n\n\n\n\n\n\n\n\n","import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport SingleAppCard from './SingleAppCard'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport './AppCards.css'\nimport { AppsSharp } from '@material-ui/icons';\n\n\nconst AppCards = () =>{\n    const [Apps, setApps] = useState([]);\n    const [stats, setStats] = useState();\n    const colors = ['orange', 'green', 'violet']\n\n    useEffect(()=>{\n    //   let mounted = true;\n      const fetchApps = async() =>{\n        const {data} = await axios.get(\"https://api.npoint.io/adf6676a313fa01f787d\");\n        setApps(data);\n      } \n\n      const fectchAllStats = async() =>{\n        const {data} = await axios.get(\"https://api.npoint.io/baf8dba5974d29aa094b\");\n        setStats(data);\n      }\n      fetchApps();\n      fectchAllStats();\n    //   return () => mounted = false;\n    }, [])\n\n    return(\n        <>\n        \n            <div className=\"apps\">\n                <div className=\"apps-heading\">\n                    <h3>Apps</h3>\n                    <h3><SettingsIcon/></h3>\n                </div>\n                <div className=\"cards-list\">\n                    {\n                        Apps?.map((App, idx) => (\n                            <SingleAppCard key={App.id} app={App} stats={ stats && stats[App.id]} color={colors[idx%3]}/>\n                        ))\n                    }\n                </div>\n            </div>\n\n        \n        </>\n        \n    )\n\n\n\n}\n\nexport default AppCards","export default __webpack_public_path__ + \"static/media/asset1.6ce40959.svg\";","export default __webpack_public_path__ + \"static/media/icon1.75892e65.svg\";","export default __webpack_public_path__ + \"static/media/icon2.2c236833.svg\";","export default __webpack_public_path__ + \"static/media/icon3.0d357e94.svg\";","export default __webpack_public_path__ + \"static/media/icon4.39c608a8.svg\";","import React from 'react'\nimport NavBar from '../../Components/NavBar/NavBar'\nimport AppCards from '../../Components/AppCards/AppCards'\nimport asset1 from '../../assets/asset1.svg'\nimport icon1 from '../../assets/icon1.svg'\nimport icon2 from '../../assets/icon2.svg'\nimport icon3 from '../../assets/icon3.svg'\nimport icon4 from '../../assets/icon4.svg'\nimport './AppsDisplay.css'\n\nconst AppsDisplay = () =>{\n    return(\n            <div className=\"main-grid\">\n                <div className=\"sidebar\">\n                    <NavBar/>\n                    <div className=\"image\">\n                        <img src={asset1} alt=\"hi\"/>\n                    </div>\n                    <div className=\"optimisation\">\n                        <h2>Revenue Optimisation</h2>\n                        <div className=\"optimisation-grid\">\n                            <div>\n                                <img src={icon1} alt=\"hi\"/>\n                                <h3>Fill Rate</h3>\n                            </div>\n                            <div>\n                                <img src={icon2} alt=\"hi\"/>\n                                <h3>Improve CTR</h3>\n                            </div>\n                            <div>\n                                <img src={icon3} alt=\"hi\"/>\n                                <h3>Refresh Rate</h3>\n                            </div>\n                            <div>\n                                <img src={icon4} alt=\"hi\"/>\n                                <h3>Quick Integration</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <AppCards/>\n            </div>\n            \n       \n    )\n\n}\n\nexport default AppsDisplay","import React, {useState, useEffect} from 'react'\nimport NavBar from '../../Components/NavBar/NavBar'\nimport { useParams, useLocation, useHistory } from \"react-router-dom\"\nimport axios from 'axios'\nimport './AppStatsDisplay.css'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst AppStatsDisplay = (props) =>{\n\n    const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n    ];\n\n    const { id } = useParams();\n    const [data, setData] = useState(props.app);\n    const [stats, setStats] = useState([]);\n    const location = useLocation();\n    const history = useHistory();\n    const [color, setColor] = useState();\n\n    useEffect(()=>{\n        let mounted = true;\n        const fetchApps = async() =>{\n          const {data} = await axios.get(`https://api.npoint.io/d734975d2aee62d197ef/${id}`);\n          setStats(data);\n        } \n        fetchApps();\n        setData(location.app);\n        setColor(location.color);\n        return () => mounted = false;\n    }, [id, location.app, location.color])\n\n    const commafy = ( num ) => {\n        var str = num.toString().split('.');\n        if (str[0].length >= 3) {\n            str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\n        }\n        if (str[1] && str[1].length >= 3) {\n            str[1] = str[1].replace(/(\\d{3})/g, '$1 ');\n        }\n        return str.join('.');\n    }\n    const handleClick = () =>{\n        history.push('/')\n    }\n\n    return(\n        <div>\n            <NavBar/>\n            <div className=\"app-title-stats\">\n                <ArrowBackIcon onClick={handleClick} className=\"arrow-back\"/>\n                {/* <img src={icon} alt=\"hi\"/> */}\n                <div className={color}></div>\n                <div className=\"app-name\">\n                    <div><h2>{data?.name}</h2></div>\n                    <div><p>{data?.publisherName}</p></div>\n                </div>\n            </div>\n            <div className=\"table\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>Revenue</th>\n                        <th>Ad Requests</th>\n                        <th>Ad Responses</th>\n                        <th>Impressions</th>\n                        <th>Clicks</th>\n                        <th>Render Rate</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    stats?.map((row, idx)=>(\n                        <tr key={idx}>\n                            <td>\n                            {row.date.split(\"-\")[0]}{\"th \"}\n                            {row.date.split(\"-\")[1] < 10\n                                ? months[row.date.split(\"-\")[1].split(\"\")[1] - 1]\n                                : months[row.date.split(\"-\")[1] - 1]}{\", \"}\n                            {row.date.split(\"-\")[2]}\n\n                            </td>\n                            <td>${commafy(row.revenue)}</td>\n                            <td>{commafy(row.adRequest)}</td>\n                            <td>{commafy(row.adResponse)}</td>\n                            <td>{commafy(row.impressions)}</td>\n                            <td>{commafy(row.clicks)}</td>\n                            <td>{((row.impressions/row.adResponse)* 100).toFixed(3)}%</td>\n                        </tr>\n                    ))\n                }\n                </tbody>\n            </table>\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default AppStatsDisplay","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\"\nimport AppsDisplay from './Pages/AppsDisplay/AppsDisplay'\nimport AppStatsDisplay from './Pages/AppStatsDisplay/AppStatsDisplay'\n\nconst App=() =>{\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <AppsDisplay/>\n          </Route>\n          <Route path=\"/app/:id\">\n            <AppStatsDisplay/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}